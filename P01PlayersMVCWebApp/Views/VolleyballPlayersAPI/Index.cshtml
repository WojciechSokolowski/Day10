@model P01PlayersMVCWebApp.Services.Pager<P01PlayersMVCWebApp.Models.VolleyballPlayer>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>



<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Data.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Data.First().Position)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Data.First().Number)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Data.First().Score)
                <a asp-action="Index" asp-route-sort="score">Sort</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Data)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Position)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Score)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


<div class="pagination">
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        if (i == Model.CurrentPage)
        {
            <span>@i</span>
        }
        else
        {
            if (string.IsNullOrEmpty(ViewBag.Sort))
            {
                <a href="@Url.Action("Index", new { page = i })">@i</a>
            }
            else
            {
                <a href="@Url.Action("Index", new { page = i, sort = ViewBag.Sort })">@i</a>
            }
        }
    }
</div>
<div>
    <p>Sort by: 
        <a href="@Url.Action("Index", new { page = Model.CurrentPage, sort = "score" })">Score</a> |
        <a href="@Url.Action("Index", new { page = Model.CurrentPage, sort = "score_desc" })">Score Descending</a> |
        <a href="@Url.Action("Index", new { page = Model.CurrentPage, sort = "id" })">Id</a> | 
        <a href="@Url.Action("Index", new { page = Model.CurrentPage, sort = "id_desc" })">Id Descending</a> |
        <a href="@Url.Action("Index", new { page = Model.CurrentPage, sort = "name" })">Name</a> | 
        <a href="@Url.Action("Index", new { page = Model.CurrentPage, sort = "name_desc" })">Name Descending</a>
    </p>
</div>

<p>Total Elements: @Model.TotalCount</p>
<p>Total Pages: @Model.TotalPages</p>